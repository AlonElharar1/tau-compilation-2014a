	goto :_ic_main
:_ic_main
	>= 5 0 $3
	if $3 :endCheck1
	param :str2
	call :println
	param 1
	call :exit
:endCheck1
	+ 5 1 $3
	param $3
	call :alloc $3
	[]= $3 5
	= $3 $1
	if $1 :endCheck3
	param :str4
	call :println
	param 1
	call :exit
:endCheck3
	[] $1 $3
	>= 0 0 $6
	if! $6 :error5
	>= 0 $3 $6
	if! $6 :endCheck6
:error5
	param :str7
	call :println
	param 1
	call :exit
:endCheck6
	+ $1 0 $3
	+ $3 1 $3
	[]= $3 10
	if $1 :endCheck8
	param :str4
	call :println
	param 1
	call :exit
:endCheck8
	[] $1 $3
	>= 1 0 $6
	if! $6 :error9
	>= 1 $3 $6
	if! $6 :endCheck10
:error9
	param :str7
	call :println
	param 1
	call :exit
:endCheck10
	+ $1 1 $3
	+ $3 1 $3
	[]= $3 20
	if $1 :endCheck11
	param :str4
	call :println
	param 1
	call :exit
:endCheck11
	[] $1 $3
	>= 2 0 $6
	if! $6 :error12
	>= 2 $3 $6
	if! $6 :endCheck13
:error12
	param :str7
	call :println
	param 1
	call :exit
:endCheck13
	+ $1 2 $3
	+ $3 1 $3
	[]= $3 40
	if $1 :endCheck14
	param :str4
	call :println
	param 1
	call :exit
:endCheck14
	[] $1 $3
	>= 3 0 $6
	if! $6 :error15
	>= 3 $3 $6
	if! $6 :endCheck16
:error15
	param :str7
	call :println
	param 1
	call :exit
:endCheck16
	+ $1 3 $3
	+ $3 1 $3
	[]= $3 80
	if $1 :endCheck17
	param :str4
	call :println
	param 1
	call :exit
:endCheck17
	[] $1 $3
	>= 4 0 $6
	if! $6 :error18
	>= 4 $3 $6
	if! $6 :endCheck19
:error18
	param :str7
	call :println
	param 1
	call :exit
:endCheck19
	+ $1 4 $3
	+ $3 1 $3
	[]= $3 160
	param $1
	call :Arrays_printArr
	param 5
	param 10
	call :Arrays_buildArr $3
	param $3
	call :Arrays_printArr
	param 14
	param 2
	call :Arrays_buildArr $3
	param 14
	param 3
	call :Arrays_buildArr $1
	param $3
	param $1
	call :Arrays_sumArr $3
	param $3
	call :Arrays_printArr
	ret
:Arrays_buildArr
	>= $0 0 $4
	if $4 :endCheck20
	param :str2
	call :println
	param 1
	call :exit
:endCheck20
	+ $0 1 $4
	param $4
	call :alloc $4
	[]= $4 $0
	= $4 $0
	= 0 $4
:while_start21
	if $0 :endCheck23
	param :str4
	call :println
	param 1
	call :exit
:endCheck23
	[] $0 $8
	< $4 $8 $7
	if! $7 :while_end22
	if $0 :endCheck24
	param :str4
	call :println
	param 1
	call :exit
:endCheck24
	[] $0 $8
	>= $4 0 $7
	if! $7 :error25
	>= $4 $8 $7
	if! $7 :endCheck26
:error25
	param :str7
	call :println
	param 1
	call :exit
:endCheck26
	+ $0 $4 $8
	+ $8 1 $8
	[]= $8 $1
	+ $4 1 $8
	= $8 $4
	goto :while_start21
:while_end22
	ret $0
	ret
:Arrays_sumArr
	if $0 :endCheck27
	param :str4
	call :println
	param 1
	call :exit
:endCheck27
	[] $0 $3
	= $3 $2
	>= $2 0 $3
	if $3 :endCheck28
	param :str2
	call :println
	param 1
	call :exit
:endCheck28
	+ $2 1 $3
	param $3
	call :alloc $3
	[]= $3 $2
	= $3 $2
	= 0 $3
:while_start29
	if $0 :endCheck31
	param :str4
	call :println
	param 1
	call :exit
:endCheck31
	[] $0 $10
	< $3 $10 $9
	if! $9 :while_end30
	if $0 :endCheck32
	param :str4
	call :println
	param 1
	call :exit
:endCheck32
	[] $0 $10
	>= $3 0 $9
	if! $9 :error33
	>= $3 $10 $9
	if! $9 :endCheck34
:error33
	param :str7
	call :println
	param 1
	call :exit
:endCheck34
	+ $0 $3 $10
	+ $10 1 $10
	[] $10 $9
	if $1 :endCheck35
	param :str4
	call :println
	param 1
	call :exit
:endCheck35
	[] $1 $10
	>= $3 0 $18
	if! $18 :error36
	>= $3 $10 $18
	if! $18 :endCheck37
:error36
	param :str7
	call :println
	param 1
	call :exit
:endCheck37
	+ $1 $3 $10
	+ $10 1 $10
	[] $10 $18
	+ $9 $18 $10
	if $2 :endCheck38
	param :str4
	call :println
	param 1
	call :exit
:endCheck38
	[] $2 $9
	>= $3 0 $18
	if! $18 :error39
	>= $3 $9 $18
	if! $18 :endCheck40
:error39
	param :str7
	call :println
	param 1
	call :exit
:endCheck40
	+ $2 $3 $9
	+ $9 1 $9
	[]= $9 $10
	+ $3 1 $10
	= $10 $3
	goto :while_start29
:while_end30
	ret $2
	ret
:Arrays_printArr
	param :str41
	call :print
	= 0 $1
:while_start42
	if $0 :endCheck44
	param :str4
	call :println
	param 1
	call :exit
:endCheck44
	[] $0 $4
	- $4 1 $3
	< $1 $3 $4
	if! $4 :while_end43
	if $0 :endCheck45
	param :str4
	call :println
	param 1
	call :exit
:endCheck45
	[] $0 $4
	>= $1 0 $3
	if! $3 :error46
	>= $1 $4 $3
	if! $3 :endCheck47
:error46
	param :str7
	call :println
	param 1
	call :exit
:endCheck47
	+ $0 $1 $4
	+ $4 1 $4
	[] $4 $3
	param $3
	call :printi
	param :str48
	call :print
	+ $1 1 $4
	= $4 $1
	goto :while_start42
:while_end43
	if $0 :endCheck49
	param :str4
	call :println
	param 1
	call :exit
:endCheck49
	[] $0 $4
	>= $1 0 $3
	if! $3 :error50
	>= $1 $4 $3
	if! $3 :endCheck51
:error50
	param :str7
	call :println
	param 1
	call :exit
:endCheck51
	+ $0 $1 $4
	+ $4 1 $4
	[] $4 $0
	param $0
	call :printi
	param :str52
	call :print
	param :str53
	call :println
	ret
.data
:str2
	57
	"Runtime Error: Array allocation with negative array size!"
:str4
	40
	"Runtime Error: Null pointer dereference!"
:str7
	41
	"Runtime Error: Array index out of bounds!"
:str41
	2
	"[ "
:str48
	2
	", "
:str52
	2
	" ]"
:str53
	0
	""
